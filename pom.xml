<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>pentaho</groupId>
  <artifactId>mondrian</artifactId>
  <version>4.7-SNAPSHOT</version>
  <name>mondrian</name>
  <description>Mondrian OLAP engine.</description>
  <url>http://github.com/pentaho/mondrian</url>
  <inceptionYear>2001</inceptionYear>
  <organization>
    <name>Pentaho</name>
    <url>http://www.pentaho.com</url>
  </organization>
  <licenses>
    <license>
      <name>Eclipse Public License</name>
      <url>http://www.eclipse.org/legal/epl-v10.html</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>julianhyde</id>
      <name>Julian Hyde</name>
      <email>jhyde@apache.org</email>
      <url>https://github.com/julianhyde</url>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
  </developers>
  <mailingLists>
    <mailingList>
      <name>Mondrian developers list</name>
      <post>mondrian@pentaho.org</post>
      <archive>http://lists.pentaho.org/pipermail/mondrian/</archive>
    </mailingList>
  </mailingLists>
  <scm>
    <connection>scm:git:git://github.com/pentaho/mondrian.git</connection>
    <developerConnection>scm:git:git@github.com:pentaho/mondrian.git</developerConnection>
    <url>http://github.com/pentaho/mondrian/tree/master</url>
  </scm>
  <issueManagement />
  <distributionManagement>
    <repository>
      <id>pentaho</id>
      <name>Pentaho repository</name>
      <url>http://repository.pentaho.org/artifactory/repo</url>
    </repository>
  </distributionManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vendor>Pentaho</vendor>
    <version.major>4</version.major>
    <version.minor>700</version.minor>
    <driver.name>Mondrian olap4j driver</driver.name>
    <driver.version>4.7-SNAPSHOT</driver.version>
    <driver.version.major>4</driver.version.major>
    <driver.version.minor>700</driver.version.minor>

    <!-- Version properties must be sorted. -->
    <build-helper-maven-plugin.version>1.8</build-helper-maven-plugin.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-dbcp.version>1.2.1</commons-dbcp.version>
    <commons-io.version>1.4</commons-io.version>
    <commons-lang.version>2.4</commons-lang.version>
    <commons-logging.version>1.1.1</commons-logging.version>
    <commons-math.version>1.1</commons-math.version>
    <commons-pool.version>1.2</commons-pool.version>
    <commons-vfs2.version>2.0</commons-vfs2.version>
    <commons-vfs.version>1.0</commons-vfs.version>
    <ctsym-java6.version>1.6.0_24</ctsym-java6.version>
    <dom4j.version>1.6.1</dom4j.version>
    <eigenbase-properties.version>1.1.2</eigenbase-properties.version>
    <eigenbase-resgen.version>1.3.7-SNAPSHOT</eigenbase-resgen.version>
    <eigenbase-xom.version>1.3.5</eigenbase-xom.version>
    <foodmart-data-hsqldb.version>0.4</foodmart-data-hsqldb.version>
    <git-commit-id-plugin.version>2.1.9</git-commit-id-plugin.version>
    <groovy-maven-plugin.version>2.0</groovy-maven-plugin.version>
    <hsqldb.version>2.3.1</hsqldb.version>
    <javacc-maven-plugin.version>2.4</javacc-maven-plugin.version>
    <jsp-api.version>2.0</jsp-api.version>
    <junit.version>3.8.1</junit.version>
    <maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
    <maven-jar-plugin.version>2.2</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
    <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
    <mockito-all.version>1.8.5</mockito-all.version>
    <mysql-connector-java.version>5.1.31</mysql-connector-java.version>
    <olap4j.version>1.2.0</olap4j.version>
    <rt-jdk1.5.version>1.5.0_22</rt-jdk1.5.version>
    <servlet-api.version>2.4</servlet-api.version>
    <steelwheels-data-hsqldb.version>0.2-SNAPSHOT</steelwheels-data-hsqldb.version>
    <toolbox.version>0.4-SNAPSHOT</toolbox.version>
    <tools.version>1.5.0</tools.version>
    <validation-api.version>1.0.0.GA</validation-api.version>
    <xalan.version>2.6.0</xalan.version>
    <xercesImpl.version>2.9.1</xercesImpl.version>
    <xmlunit.version>1.3</xmlunit.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${commons-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>${commons-dbcp.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${commons-logging.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-math</groupId>
      <artifactId>commons-math</artifactId>
      <version>${commons-math.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
      <version>${commons-pool.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-vfs</groupId>
      <artifactId>commons-vfs</artifactId>
      <version>${commons-vfs.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-vfs2</artifactId>
      <version>${commons-vfs2.version}</version>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>${dom4j.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
    </dependency>
    <dependency>
      <groupId>eigenbase</groupId>
      <artifactId>eigenbase-xom</artifactId>
      <version>${eigenbase-xom.version}</version>
    </dependency>
    <dependency>
      <groupId>eigenbase</groupId>
      <artifactId>eigenbase-properties</artifactId>
      <version>${eigenbase-properties.version}</version>
    </dependency>
    <dependency>
      <groupId>eigenbase</groupId>
      <artifactId>eigenbase-resgen</artifactId>
      <version>${eigenbase-resgen.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsqldb.version}</version>
    </dependency>
    <dependency>
      <groupId>org.olap4j</groupId>
      <artifactId>olap4j</artifactId>
      <version>${olap4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.olap4j</groupId>
      <artifactId>olap4j-tck</artifactId>
      <version>${olap4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.olap4j</groupId>
      <artifactId>olap4j-xmla</artifactId>
      <version>${olap4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.olap4j</groupId>
      <artifactId>olap4j-xmlaserver</artifactId>
      <version>${olap4j.version}</version>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <version>${xalan.version}</version>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>${xercesImpl.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${jsp-api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun</groupId>
      <artifactId>rt-jdk1.5</artifactId>
      <version>${rt-jdk1.5.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>net.java.openjdk</groupId>
      <artifactId>ctsym-java6</artifactId>
      <version>${ctsym-java6.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>foodmart-data-hsqldb</artifactId>
      <version>${foodmart-data-hsqldb.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>steelwheels-data-hsqldb</artifactId>
      <version>${steelwheels-data-hsqldb.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>${xmlunit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector-java.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito-all.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>http://repo.maven.apache.org/maven2</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <id>pentaho</id>
      <name>Pentaho</name>
      <url>http://repo.pentaho.org/artifactory/repo</url>
    </repository>
  </repositories>

  <build>
    <defaultGoal>package</defaultGoal>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources/version</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${project.basedir}</directory>
        <includes>
          <include>log4j.properties</include>
        </includes>
      </testResource>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
        <includes>
          <include>**/*.csv</include>
          <include>**/*.properties</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <executions>
          <execution>
            <id>properties</id>
            <phase>initialize</phase>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <executions>
          <execution>
            <id>compile-early</id>
            <phase>validate</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <includes>
                <include>src/main/java/mondrian/olap/MondrianException.java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>compile-jdk15</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/FactoryJdbc4*.java</exclude>
              </excludes>
              <includes>
                <include>**/FactoryJdbc3Impl.java</include>
              </includes>
              <compilerArguments>
                <verbose />
                <bootclasspath>${com.sun:rt-jdk1.5:jar}</bootclasspath>
              </compilerArguments>
            </configuration>
          </execution>
          <execution>
            <id>compile-jdk16</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/FactoryJdbc3*.java</exclude>
              </excludes>
              <includes>
                <include>**/FactoryJdbc4Impl.java</include>
              </includes>
              <compilerArguments>
                <verbose />
                <bootclasspath>${net.java.openjdk:rt-java6:jar}</bootclasspath>
              </compilerArguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <excludes>
            <exclude>**/FactoryJdbc3Impl.java</exclude>
            <exclude>**/FactoryJdbc4Impl.java</exclude>
            <exclude>**/UtilCompatibleJdk14.java</exclude>
            <exclude>**/UtilCompatibleJdk15.java</exclude>
            <exclude>**/UtilCompatibleJdk16.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>target/generated-sources/prop</source>
                <source>target/generated-sources/resgen</source>
                <source>target/generated-sources/version</source>
                <source>target/generated-sources/xom</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>${javacc-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>javacc</id>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <sourceDirectory>src/main/javacc</sourceDirectory>
              <includes>
                <include>mondrian/parser/MdxParser.jj</include>
              </includes>
              <lookAhead>2</lookAhead>
              <isStatic>false</isStatic>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>${groovy-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                import net.hydromatic.toolbox.property.PropertyGenerator
                import org.eigenbase.resgen.ResourceGenTask
                import org.eigenbase.xom.MetaGenerator
                import java.io.File

                new File("target/generated-sources/xom/mondrian/olap").mkdirs()
                new File("target/generated-sources/xom/mondrian/rolap/aggmatcher").mkdirs()

                destDir = "target/generated-sources/xom"
                e = new File("${project.basedir}")
                destinationDirectory = new File(e, destDir)

                // Generate Mondrian3Def.java
                model = "src/main/xom/mondrian/olap/Mondrian3Schema.xml"
                className = "mondrian.olap.Mondrian3Def"
                dtdFileName = "mondrian3.dtd"

                modelFile = new File(e, model)
                generator = new MetaGenerator(modelFile.toString(), false, className)
                generator.writeFiles(destinationDirectory.toString(), dtdFileName)
                generator.writeOutputs()

                // Generate MondrianDef.java
                model = "src/main/xom/mondrian/olap/MondrianSchema.xml"
                className = "mondrian.olap.MondrianDef"
                dtdFileName = "mondrian.dtd"

                modelFile = new File(e, model)
                generator = new MetaGenerator(modelFile.toString(), false, className)
                generator.writeFiles(destinationDirectory.toString(), dtdFileName)
                generator.writeOutputs()

                // Generate DefaultDef.java
                model = "src/main/xom/mondrian/rolap/aggmatcher/DefaultRulesSchema.xml"
                className = "mondrian.rolap.aggmatcher.DefaultDef"
                dtdFileName = "aggregates.dtd"

                modelFile = new File(e, model)
                generator = new MetaGenerator(modelFile.toString(), false, className)
                generator.writeFiles(destinationDirectory.toString(), dtdFileName)
                generator.writeOutputs()

                // Generate DataSourcesConfig.java
                model = "src/main/xom/mondrian/xmla/DataSourcesConfig.xml"
                className = "mondrian.xmla.DataSourcesConfig"
                dtdFileName = "datasourcesconfig.dtd"

                modelFile = new File(e, model)
                generator = new MetaGenerator(modelFile.toString(), false, className)
                generator.writeFiles(destinationDirectory.toString(), dtdFileName)
                generator.writeOutputs()

                // Generate MondrianProperties.java
                PropertyGenerator.main()

                // Generate MondrianResource.java
                t2 = new ResourceGenTask()
                t2.setSrcdir(new File(e, "src/main/java"))
                t2.setDestdir(new File(e, "target/generated-sources/resgen"))
                t2.setResdir(new File(e, "target/classes"))
                t2.setStyle("functor")
                t2.setLocales("en_US,de_DE,de,es_ES")
                i = new ResourceGenTask.Include()
                i.setName("mondrian/resource/MondrianResource.xml")
                t2.addInclude(i)
                t2.execute()

                // Generate MondrianOlap4jDriverVersion.java
                v = new File(e, "target/generated-sources/version/mondrian/olap4j/MondrianOlap4jDriverVersion.java")
                v.getParentFile().mkdirs()
                w = new FileWriter(v)
                pw = new PrintWriter(w)
                pw.println("/*")
                pw.println(" * Project version information. Generated - do not modify.")
                pw.println(" */")
                pw.println("package mondrian.olap4j;")
                pw.println("")
                pw.println("/**")
                pw.println(" * Version information for the Mondrian olap4j driver. (Generated.)")
                pw.println(" */")
                pw.println("class MondrianOlap4jDriverVersion {")
                pw.println("  static final String NAME = \"${driver.name}\";")
                pw.println("  static final String VERSION = \"${driver.version}\";")
                pw.println("  static final int MAJOR_VERSION = ${driver.version.major};")
                pw.println("  static final int MINOR_VERSION = ${driver.version.minor};")
                pw.println("}")
                pw.println("")
                pw.println("// End MondrianOlap4jDriverVersion.java")
                pw.close()

                // Generate MondrianServerVersion.java
                sv = new File(e, "target/generated-sources/version/mondrian/server/MondrianServerVersion.java")
                sv.getParentFile().mkdirs()
                w = new FileWriter(sv)
                pw = new PrintWriter(w)
                pw.println("/*")
                pw.println(" * Project version information. Generated - do not modify.")
                pw.println(" */")
                pw.println("package mondrian.server;")
                pw.println("")
                pw.println("/**")
                pw.println(" * Version information for Mondrian. (Generated by build)")
                pw.println(" */")
                pw.println("class MondrianServerVersion {")
                pw.println("  static final String VENDOR = \"${vendor}\";")
                pw.println("  static final String NAME = \"${project.name}\";")
                pw.println("  static final String VERSION = \"${project.version}\";")
                pw.println("  static final int MAJOR_VERSION = ${version.major};")
                pw.println("  static final int MINOR_VERSION = ${version.minor};")
                pw.println("}")
                pw.println("")
                pw.println("// End MondrianServerVersion.java")
                pw.close()
              </source>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>eigenbase</groupId>
            <artifactId>eigenbase-resgen</artifactId>
            <version>${eigenbase-resgen.version}</version>
          </dependency>
          <dependency>
            <groupId>eigenbase</groupId>
            <artifactId>eigenbase-xom</artifactId>
            <version>${eigenbase-xom.version}</version>
          </dependency>
          <dependency>
            <groupId>net.hydromatic</groupId>
            <artifactId>toolbox</artifactId>
            <version>${toolbox.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>mondrian/test/Main.java</include>
          </includes>
          <systemPropertyVariables>
            <log4j.configuration>${log4j.configuration}</log4j.configuration>
            <mondrian.jdbcDrivers>${mondrian.jdbcDrivers}</mondrian.jdbcDrivers>
            <mondrian.foodmart.jdbcURL>${mondrian.foodmart.jdbcURL}</mondrian.foodmart.jdbcURL>
            <mondrian.test.foodmart.catalogURL>${mondrian.test.foodmart.catalogURL}</mondrian.test.foodmart.catalogURL>
            <mondrian.test.connectString>${mondrian.test.connectString}</mondrian.test.connectString>
            <user.language>en</user.language>
            <user.region>US</user.region>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <instructions>
            <Import-Package>!org.junit.*,!junit.*,org.olap4j.driver.xmla;resolution:=optional,org.olap4j.driver.xmla.proxy;resolution:=optional,org.olap4j.test;resolution:=optional,mondrian.xmla,mondrian.xmla.impl,org.apache.log4j;version="[1.2.17,1.3)",org.pentaho.platform.web.servlet.PentahoDataSourceResolver;resolution:=optional,*</Import-Package>
            <Export-Package>!mondrian.xmla, !mondrian.xmla.*,*</Export-Package>
            <DynamicImport-Package>*</DynamicImport-Package>
            <Bundle-Name>mondrian</Bundle-Name>
            <Bundle-SymbolicName>mondrian</Bundle-SymbolicName>
            <Require-Capability>osgi.ee;filter:="(&amp;(osgi.ee=JavaSE)(version=1.5))"</Require-Capability>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <links>
            <link>http://docs.oracle.com/javase/7/docs/api/</link>
          </links>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <!-- Generate git.properties on first build -->
      <id>generate-git-id</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <!-- Note: <missing> here does NOT support interpolation,
        so technically, this profile is active for sub-modules.
        It would be nice to use ${top.dir}/target/... here, but
        it is not possible.
        However sub-modules lack .git folder, so no git.properties
        is generated. -->
        <file>
          <missing>target/git.properties</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <version>${git-commit-id-plugin.version}</version>
            <inherited>false</inherited>
            <executions>
              <execution>
                <goals>
                  <goal>revision</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
              <verbose>false</verbose>
              <skipPoms>false</skipPoms>
              <generateGitPropertiesFile>true</generateGitPropertiesFile>
              <generateGitPropertiesFilename>target/git.properties</generateGitPropertiesFilename>
              <failOnNoGitDirectory>false</failOnNoGitDirectory>
              <gitDescribe>
                <skip>false</skip>
                <always>false</always>
                <abbrev>7</abbrev>
                <dirty>-dirty</dirty>
                <forceLongFormat>true</forceLongFormat>
              </gitDescribe>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
